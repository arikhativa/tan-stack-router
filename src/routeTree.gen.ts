/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LeadIndexRouteImport } from './routes/lead/index'
import { Route as LeadTableRouteImport } from './routes/lead/table'
import { Route as LeadIdRouteImport } from './routes/lead/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LeadIndexRoute = LeadIndexRouteImport.update({
  id: '/lead/',
  path: '/lead/',
  getParentRoute: () => rootRouteImport,
} as any)
const LeadTableRoute = LeadTableRouteImport.update({
  id: '/lead/table',
  path: '/lead/table',
  getParentRoute: () => rootRouteImport,
} as any)
const LeadIdRoute = LeadIdRouteImport.update({
  id: '/lead/$id',
  path: '/lead/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/lead/$id': typeof LeadIdRoute
  '/lead/table': typeof LeadTableRoute
  '/lead': typeof LeadIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/lead/$id': typeof LeadIdRoute
  '/lead/table': typeof LeadTableRoute
  '/lead': typeof LeadIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/lead/$id': typeof LeadIdRoute
  '/lead/table': typeof LeadTableRoute
  '/lead/': typeof LeadIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/lead/$id' | '/lead/table' | '/lead'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/lead/$id' | '/lead/table' | '/lead'
  id: '__root__' | '/' | '/lead/$id' | '/lead/table' | '/lead/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LeadIdRoute: typeof LeadIdRoute
  LeadTableRoute: typeof LeadTableRoute
  LeadIndexRoute: typeof LeadIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lead/': {
      id: '/lead/'
      path: '/lead'
      fullPath: '/lead'
      preLoaderRoute: typeof LeadIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lead/table': {
      id: '/lead/table'
      path: '/lead/table'
      fullPath: '/lead/table'
      preLoaderRoute: typeof LeadTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lead/$id': {
      id: '/lead/$id'
      path: '/lead/$id'
      fullPath: '/lead/$id'
      preLoaderRoute: typeof LeadIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LeadIdRoute: LeadIdRoute,
  LeadTableRoute: LeadTableRoute,
  LeadIndexRoute: LeadIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
